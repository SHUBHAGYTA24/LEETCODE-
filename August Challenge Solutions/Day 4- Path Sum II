/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    void solve(TreeNode* root, int sum, vector<int> v)
    {
        if(root==nullptr)
            return;
        
        v.push_back(root->val);
        
        if(!root->left && !root->right)
        {
            if(root->val==sum)
                res.push_back(v);
        }
        
        solve(root->left,sum-root->val,v);
        solve(root->right,sum-root->val,v);
        
        //v.clear();
        
        
    }
    vector<vector<int>> pathSum(TreeNode* root, int target) {
        vector<int> v;
        solve(root,target,v);
        return res;
    }
};
